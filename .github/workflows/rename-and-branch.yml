# ============================================================================
# Workflow: Rename, Build, Test, and Push to Base Branch
#
# Purpose:
#   1. Run rename/remove tools to generate project variants (Job 1).
#   2. Push modified source code back into the *_base branches (Job 1).
#   3. Build, test, and publish Debug/Release outputs for selected keep/remove
#      variants (Job 2).
#
# Notes:
#   - Git identity is explicitly configured inside the _base repo to avoid the
#     "Author identity unknown" error in local commits.
#   - Only Job 1 pushes back to *_base branches.
#   - Job 2 uses an explicit matrix list — add/remove entries as needed.
#   - Any regex in comments is explained inline.
# ============================================================================

name: Rename • Build/Test • (Optional) Branch Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

# ---- Global environment shared across all jobs -----------------------------
env:
  REMOVE_EXE: '.\Remove Modules from FreeCRM.exe'
  RENAME_EXE: '.\Rename FreeCRM.exe'
  DOTNET_VERSION: 9.0.x

defaults:
  run:
    shell: pwsh

jobs:
  # ==========================================================================
  # JOB 1: PRODUCTION RUNS — Rename/Remove, Push to *_base branch
  # ==========================================================================
  project:
    name: 1. ${{ matrix.project.name }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      max-parallel: 18
      matrix:
        project:
          - name: FreeCICD
            branch: FreeCICD_base
            selections: 'keep:Tags'
          - name: FreeLLM
            branch: FreeLLM_base
            selections: 'remove:all'
          - name: FreeManager
            branch: FreeManager_base
            selections: 'remove:all'
          - name: PJProcessor
            branch: PJProcessor_base
            selections: 'remove:all'
          - name: Touchpoints
            branch: Touchpoints_base
            selections: 'remove:all'

    env:
      SELECTIONS:  ${{ matrix.project.selections }}
      APP_NAME:    ${{ matrix.project.name }}
      BASE_BRANCH: ${{ matrix.project.branch }}

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          path: _main
          fetch-depth: 0

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BASE_BRANCH }}
          path: _base
          fetch-depth: 0

      # Ensure .NET runtime/SDK is present before running the EXEs
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Run remove modules
        run: |
          cd _main
          if (!(Test-Path "${{ env.REMOVE_EXE }}")) { throw "Remove tool not found: ${{ env.REMOVE_EXE }}" }
          & "${{ env.REMOVE_EXE }}" "${{ env.SELECTIONS }}"

      - name: Run rename
        run: |
          cd _main
          if (!(Test-Path "${{ env.RENAME_EXE }}")) { throw "Rename tool not found: ${{ env.RENAME_EXE }}" }
          # Regex ^[A-Za-z][A-Za-z0-9]*$:
          #  - ^ and $ anchor start/end of the string
          #  - First char must be a letter (A–Z or a–z)
          #  - Remaining chars must be letters or digits
          if ("${{ env.APP_NAME }}" -notmatch '^[A-Za-z][A-Za-z0-9]*$') {
            throw "APP_NAME '${{ env.APP_NAME }}' is invalid. Use letters/numbers only and start with a letter."
          }
          & "${{ env.RENAME_EXE }}" "${{ env.APP_NAME }}"

      - name: Snapshot source after rename/remove
        run: |
          $src = Join-Path $pwd "_main"
          $zip = Join-Path $env:RUNNER_TEMP "snapshot_${{ env.APP_NAME }}.zip"
          Compress-Archive -Path "$src\*" -DestinationPath $zip -Force
          "SNAPSHOT_PATH=$zip" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Upload source snapshot
        uses: actions/upload-artifact@v4
        with:
          name: source_after_changes_${{ env.APP_NAME }}
          path: ${{ env.SNAPSHOT_PATH }}
          if-no-files-found: warn

      # Configure identity INSIDE the _base repo (fixes "not in a git directory")
      - name: Configure Git identity (local to _base)
        if: ${{ env.BASE_BRANCH != '' }}
        run: |
          git -C _base config user.name  "github-actions[bot]"
          git -C _base config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Push to base branch
        if: ${{ env.BASE_BRANCH != '' }}
        run: |
          cd _base
          # Wipe existing contents (except .git) and replace with modified source
          Get-ChildItem -Force | Where-Object { $_.Name -ne ".git" } | Remove-Item -Recurse -Force
          Copy-Item -Path "$env:GITHUB_WORKSPACE\_main\*" -Destination . -Recurse -Force
          git add -A
          # Grab the latest commit message from main to reference in the regen
          $commitMsg = git -C ..\_main log -1 --pretty=%B origin/main
          git commit -m "Regenerated $env:BASE_BRANCH: $commitMsg" || echo "No changes to commit"
          git push origin HEAD:${env:BASE_BRANCH} --force

  # ==========================================================================
  # JOB 2: BUILD/TEST — Explicit keep/remove variants (extend matrix manually)
  # ==========================================================================
  build-test:
    name: 2. ${{ matrix.test.id }} / ${{ matrix.test.selections }}
    runs-on: windows-latest
    needs: project
    strategy:
      fail-fast: false
      max-parallel: 18
      matrix:
        test:
          # ---- Add explicit keep/remove cases here ----
          - { id: 'T01', selections: 'keep:Appointments' }
          - { id: 'T02', selections: 'remove:Appointments' }
          - { id: 'T03', selections: 'keep:EmailTemplates' }
          - { id: 'T04', selections: 'remove:EmailTemplates' }
          - { id: 'T05', selections: 'keep:Invoices' }
          - { id: 'T06', selections: 'remove:Invoices' }
          - { id: 'T07', selections: 'keep:Locations' }
          - { id: 'T08', selections: 'remove:Locations' }
          - { id: 'T09', selections: 'keep:Payments' }
          - { id: 'T10', selections: 'remove:Payments' }
          - { id: 'T11', selections: 'keep:Services' }
          - { id: 'T12', selections: 'remove:Services' }
          - { id: 'T13', selections: 'keep:Tags' }
          - { id: 'T14', selections: 'remove:Tags' }
          # Later: just keep adding flat entries here for pairwise, etc.

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          path: _main
          fetch-depth: 0

      - name: Setup .NET SDKs
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Remove modules
        run: |
          cd _main
          & "${{ env.REMOVE_EXE }}" "${{ matrix.test.selections }}"

      - name: Rename project
        run: |
          cd _main
          $sel = '${{ matrix.test.selections }}'
          # The three -replace operations below build a clean variant name:
          # 1) 'keep:'   → 'Keep'     (prefix keep selections with 'Keep')
          # 2) 'remove:' → 'Remove'   (prefix remove selections with 'Remove')
          # 3) '[^A-Za-z0-9]' → ''    (strip all non-alphanumeric characters)
          $appName = 'Test' + ($sel -replace 'keep:','Keep' -replace 'remove:','Remove' -replace '[^A-Za-z0-9]','')
          $appName = "$appName" + "_${{ matrix.test.id }}"
          & "${{ env.RENAME_EXE }}" "$appName"
          "APP_NAME=$appName" | Out-File -FilePath $env:GITHUB_ENV -Append

      # ---- Snapshot after rename/remove, before build (variant-specific) ----
      - name: Snapshot source before build
        run: |
          $src = Join-Path $pwd "_main"
          $zip = Join-Path $env:RUNNER_TEMP "snapshot_${{ env.APP_NAME }}.zip"
          Compress-Archive -Path "$src\*" -DestinationPath $zip -Force
          "SNAPSHOT_PATH=$zip" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Upload variant snapshot
        uses: actions/upload-artifact@v4
        with:
          name: source_after_changes_${{ env.APP_NAME }}
          path: ${{ env.SNAPSHOT_PATH }}
          if-no-files-found: warn

      - name: Build & Publish (Debug/Release)
        run: |
          cd _main
          $sln  = Get-ChildItem -Recurse -File -Filter *.sln | Select-Object -First 1
          $proj = Get-ChildItem -Recurse -File -Filter *.csproj | Select-Object -First 1
          dotnet restore "$($sln.FullName)"
          foreach ($cfg in @('Debug','Release')) {
            dotnet build   "$($sln.FullName)"  --configuration $cfg --no-restore
            dotnet publish "$($proj.FullName)" --configuration $cfg --no-build --output "publish\$cfg"
          }

      - name: Run tests
        run: |
          cd _main
          $sln = Get-ChildItem -Recurse -File -Filter *.sln | Select-Object -First 1
          foreach ($cfg in @('Debug','Release')) {
            dotnet test "$($sln.FullName)" --configuration $cfg --no-build --logger "trx" -r "test-results\$cfg"
          }

      - name: Upload artifacts (Debug)
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.test.id }}-${{ env.APP_NAME }}-Debug
          path: _main/publish/Debug
          if-no-files-found: warn

      - name: Upload artifacts (Release)
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.test.id }}-${{ env.APP_NAME }}-Release
          path: _main/publish/Release
          if-no-files-found: warn

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Tests-${{ matrix.test.id }}-${{ env.APP_NAME }}
          path: _main/test-results
          if-no-files-found: warn
