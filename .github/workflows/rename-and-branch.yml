name: Rename and Branch

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      selections:
        description: "Optional: keep:Tags | remove:all | remove:Module1,Module2"
        required: false
        default: ""
      app_name:
        description: "New application name for the rename tool (overrides matrix)"
        required: false
        default: ""

permissions:
  contents: write

jobs:
  project:
    name: Job 1 â€¢ Process ${{ matrix.project.name }}
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        project:
          - name: FreeCICD
            branch: FreeCICD_base
            selections: "keep:Tags"
          - name: FreeLLM
            branch: FreeLLM_base
            selections: "remove:all"
          - name: FreeManager
            branch: FreeManager_base
            selections: "remove:all"
          - name: PJProcessor
            branch: PJProcessor_base
            selections: "remove:all"
          - name: Touchpoints
            branch: Touchpoints_base
            selections: "remove:all"

    env:
      SELECTIONS:  ${{ github.event.inputs.selections || matrix.project.selections }}
      APP_NAME:    ${{ github.event.inputs.app_name || matrix.project.name }}
      BASE_BRANCH: ${{ matrix.project.branch }}
      REMOVE_EXE:  '.\Remove Modules from FreeCRM.exe'
      RENAME_EXE:  '.\Rename FreeCRM.exe'

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          path: _main
          fetch-depth: 0

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BASE_BRANCH }}
          path: _base
          fetch-depth: 0

      - name: Checkout app branch
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          ref: ${{ env.APP_NAME }}
          path: _app
          fetch-depth: 0

      - name: Setup .NET (ensure runtimes for the tools)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
            8.0.x

      - name: Run remove modules (CLI)
        shell: pwsh
        run: |
          cd _main
          $exe = $env:REMOVE_EXE
          if (!(Test-Path $exe)) { throw "Remove tool not found: $exe" }

          $arg = ($env:SELECTIONS ?? '').Trim()
          if ([string]::IsNullOrWhiteSpace($arg)) {
            Write-Host "SELECTIONS empty: skipping removal."
            exit 0
          }

          # Remove all spaces just in case, and normalize remove:all casing
          $arg = ($arg -replace '\s','')
          if ($arg -match '^(?i)remove:all$') { $arg = 'remove:all' }

          Write-Host "Running removal with: $arg"
          & "$exe" $arg
          if ($LASTEXITCODE -ne 0) { throw "Remove run failed (exit $LASTEXITCODE)" }

      - name: Run rename (CLI)
        shell: pwsh
        run: |
          cd _main
          $exe = $env:RENAME_EXE
          if (!(Test-Path $exe)) { throw "Rename tool not found: $exe" }

          # Letters/numbers only, start with a letter; tweak if your tool accepts other chars
          if ($env:APP_NAME -notmatch '^[A-Za-z][A-Za-z0-9]*$') {
            throw "APP_NAME '$env:APP_NAME' is invalid. Use letters/numbers only and start with a letter."
          }

          Write-Host "Renaming to: $env:APP_NAME"
          & "$exe" "$env:APP_NAME"
          if ($LASTEXITCODE -ne 0) { throw "Rename run failed (exit $LASTEXITCODE)" }

      - name: Snapshot source after changes
        shell: pwsh
        run: |
          $src = Join-Path $pwd "_main"
          $dst = Join-Path $pwd "artifacts\source_after_changes_$($env:APP_NAME)"
          $zip = Join-Path $env:RUNNER_TEMP "snapshot_$($env:APP_NAME).zip"
          New-Item -ItemType Directory -Force -Path $dst | Out-Null
          Remove-Item -Recurse -Force "$src\.github","$src\artifacts" -ErrorAction SilentlyContinue
          Compress-Archive -Path "$src\*" -DestinationPath $zip -Force
          Expand-Archive -Path $zip -DestinationPath $dst -Force

      - name: Upload source_after_changes
        uses: actions/upload-artifact@v4
        with:
          name: source_after_changes_${{ env.APP_NAME }}
          path: artifacts/source_after_changes_${{ env.APP_NAME }}

      - name: Push to base branch
        shell: pwsh
        run: |
          cd _base
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          Get-ChildItem -Force | Where-Object { $_.Name -ne ".git" } | Remove-Item -Recurse -Force
          Copy-Item -Path "$env:GITHUB_WORKSPACE\artifacts\source_after_changes_$($env:APP_NAME)\*" -Destination . -Recurse -Force
          git add -A
          $commitMsg = git -C ..\_main log -1 --pretty=%B origin/main
          git commit -m "Regenerated $env:BASE_BRANCH: $commitMsg" || echo "No changes to commit"
          git push origin HEAD:${env:BASE_BRANCH} --force
